; platformio.ini - ESP32 GPS Tracker dengan Offline Storage & IMU Support
; PlatformIO Project Configuration File

[platformio]
default_envs = esp32dev

[env:esp32dev]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 115200
board_build.flash_mode = dio
monitor_filters = esp32_exception_decoder

; Custom partition untuk SPIFFS offline storage
board_build.partitions = partitions.csv
board_build.filesystem = spiffs

; Library dependencies
lib_deps =
    vshymanskyy/TinyGSM@^0.11.7
    arduino-libraries/ArduinoHttpClient@^0.5.0
    mikalhart/TinyGPSPlus@^1.0.3
    bblanchon/ArduinoJson@^6.21.3
    ; NEW: MPU6050 library for IMU support
    electroniccats/MPU6050@^1.0.0
    ; Alternative: jrowberg/I2Cdevlib-MPU6050

; Build flags dengan offline storage & IMU support
build_flags = 
    -D CORE_DEBUG_LEVEL=3
    -D TINY_GSM_MODEM_SIM7600
    -D TINY_GSM_USE_GPRS=true
    -D TINY_GSM_DEBUG=Serial
    -D ENABLE_OFFLINE_STORAGE=true
    -D OFFLINE_MAX_RECORDS=100
    -D OFFLINE_AUTO_SYNC=true
    ; NEW: IMU support flags
    -D ENABLE_IMU_SUPPORT=true
    -D IMU_I2C_ADDRESS=0x68
    -D IMU_DEBUG_MODE=false

; Environment untuk testing dengan offline storage & IMU
[env:esp32dev_test]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 921600
board_build.partitions = partitions.csv
lib_deps = ${env:esp32dev.lib_deps}
build_flags = 
    ${env:esp32dev.build_flags}
    -D UNIT_TEST_MODE
    -D OFFLINE_DEBUG_MODE=true
    -D OFFLINE_MAX_RECORDS=50        ; Reduced untuk testing
    -D OFFLINE_SYNC_BATCH_SIZE=3     ; Smaller batches untuk testing
    -D IMU_DEBUG_MODE=true           ; Enable IMU debug output
    -D IMU_SIMULATION_MODE=true      ; Enable IMU simulation
build_src_filter = 
    +<*>
    -<main.ino>
    +<unit_tests.ino>

; Environment production dengan optimasi & IMU
[env:esp32dev_production]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 921600
board_build.partitions = partitions.csv
lib_deps = ${env:esp32dev.lib_deps}
build_flags = 
    -D CORE_DEBUG_LEVEL=0
    -D TINY_GSM_MODEM_SIM7600
    -D TINY_GSM_USE_GPRS=true
    -D ESP_TASK_WDT_TIMEOUT_S=30
    -D ENABLE_OFFLINE_STORAGE=true
    -D OFFLINE_MAX_RECORDS=200       ; Lebih banyak untuk production
    -D OFFLINE_AUTO_SYNC=true
    -D OFFLINE_MAINTENANCE_INTERVAL=600000  ; 10 menit maintenance
    -D ENABLE_IMU_SUPPORT=true
    -D IMU_I2C_ADDRESS=0x68
    -D IMU_CALIBRATION_ON_BOOT=true
    -O2

; Environment untuk development dengan debug penuh
[env:esp32dev_debug]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 460800
board_build.partitions = partitions.csv
lib_deps = ${env:esp32dev.lib_deps}
build_flags = 
    -D CORE_DEBUG_LEVEL=5
    -D TINY_GSM_MODEM_SIM7600
    -D TINY_GSM_USE_GPRS=true
    -D TINY_GSM_DEBUG=Serial
    -D ENABLE_OFFLINE_STORAGE=true
    -D OFFLINE_DEBUG_MODE=true
    -D OFFLINE_VERBOSE_LOGGING=true
    -D DEBUG_MODE=true
    -D ENABLE_IMU_SUPPORT=true
    -D IMU_DEBUG_MODE=true
    -D IMU_VERBOSE_LOGGING=true
    -D DEBUG_IMU_DATA=true
    -g -O0

; Environment untuk basement testing dengan IMU focus
[env:esp32dev_basement]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 921600
board_build.partitions = partitions.csv
lib_deps = ${env:esp32dev.lib_deps}
build_flags = 
    ${env:esp32dev.build_flags}
    -D BASEMENT_TESTING_MODE=true
    -D IMU_SAMPLE_RATE_GPS_LOST=20   ; Higher rate in basement
    -D IMU_SAMPLE_RATE_MOVING=50     ; Very high rate for testing
    -D IMU_SEND_RAW_DATA=true        ; Send all raw IMU data
    -D IMU_SEND_PROCESSED_DATA=true  ; Send all processed data
    -D FORCE_BASEMENT_MODE=false     ; Can force basement mode
    -D GPS_SIMULATION_MODE=true      ; Simulate GPS loss

; Konfigurasi tambahan untuk semua environments
[env]
; Monitor configuration
monitor_port = /dev/ttyUSB0
monitor_dtr = 0
monitor_rts = 0

; Upload configuration  
upload_port = /dev/ttyUSB0
upload_protocol = esptool

; SPIFFS configuration
board_build.filesystem = spiffs

; Kompilasi options
build_unflags = -Os
build_flags = -O2

; Custom build scripts (optional)
; extra_scripts = 
;     pre:scripts/pre_build.py
;     post:scripts/post_build.py

; ========================================
; WIRING CONFIGURATION FOR MPU6050
; ========================================
; 
; MPU6050 - ESP32 Connections:
; VCC  -> 3.3V
; GND  -> GND
; SCL  -> GPIO 22 (defined as IMU_SCL_PIN)
; SDA  -> GPIO 21 (defined as IMU_SDA_PIN)
; INT  -> GPIO 19 (optional, defined as IMU_INTERRUPT_PIN)
; AD0  -> GND (for I2C address 0x68)
;
; Total current draw: ~3.5mA active, ~40Î¼A sleep
; ========================================

; ========================================
; MEMORY USAGE ESTIMATION WITH IMU
; ========================================
; 
; Additional RAM usage:
; - ImuManager object: ~500 bytes
; - IMU data buffers: ~200 bytes
; - Dead reckoning data: ~100 bytes
; - JSON serialization: ~512 bytes
; Total additional: ~1.3KB RAM
;
; Additional Flash usage:
; - MPU6050 library: ~15KB
; - ImuManager code: ~10KB
; - Additional features: ~5KB
; Total additional: ~30KB Flash
;
; Current usage (with IMU):
; RAM:   ~35.5KB / 327KB (10.8%)
; Flash: ~619KB / 1.5MB (40%)
; ========================================